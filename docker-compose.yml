version: '3.8'

services:
  # Infrastructure Services
  postgresql:
    build:
      context: ./infrastructure/docker/postgresql
      dockerfile: Dockerfile
    container_name: cs2_postgres
    environment:
      POSTGRES_DB: cs2_predictions
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_logs:/var/log/postgresql
    networks:
      - cs2_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d cs2_predictions"]
      interval: 30s
      timeout: 10s
      retries: 5

  clickhouse:
    build:
      context: ./infrastructure/docker/clickhouse
      dockerfile: Dockerfile
    container_name: cs2_clickhouse
    environment:
      CLICKHOUSE_DB: analytics
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
      - "9009:9009"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - clickhouse_logs:/var/log/clickhouse-server
    networks:
      - cs2_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8123/ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  rabbitmq:
    build:
      context: ./infrastructure/docker/rabbitmq
      dockerfile: Dockerfile
    container_name: cs2_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"
      - "15672:15672"
      - "25672:25672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/var/log/rabbitmq
    networks:
      - cs2_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Services
  hltv-parser:
    build:
      context: ./services/hltv-parser
      dockerfile: Dockerfile
    container_name: cs2_hltv_parser
    depends_on:
      - postgresql
      - rabbitmq
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgresql:5432/cs2_predictions
      - RABBITMQ_URL=amqp://rabbitmq:rabbitmq@rabbitmq:5672/
    networks:
      - cs2_network

  telegram-bot:
    build:
      context: ./services/telegram-bot
      dockerfile: Dockerfile
    container_name: cs2_telegram_bot
    depends_on:
      - postgresql
      - rabbitmq
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgresql:5432/cs2_predictions
      - RABBITMQ_URL=amqp://rabbitmq:rabbitmq@rabbitmq:5672/
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    networks:
      - cs2_network

  prediction-service:
    build:
      context: ./services/prediction-service
      dockerfile: Dockerfile
    container_name: cs2_prediction_service
    depends_on:
      - postgresql
      - rabbitmq
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgresql:5432/cs2_predictions
      - RABBITMQ_URL=amqp://rabbitmq:rabbitmq@rabbitmq:5672/
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    networks:
      - cs2_network

  payment-service:
    build:
      context: ./services/payment-service
      dockerfile: Dockerfile
    container_name: cs2_payment_service
    depends_on:
      - postgresql
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgresql:5432/cs2_predictions
    ports:
      - "8080:80"
    networks:
      - cs2_network

  analytics-web:
    build:
      context: ./services/analytics-web
      dockerfile: Dockerfile
    container_name: cs2_analytics_web
    depends_on:
      - clickhouse
      - postgresql
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgresql:5432/cs2_predictions
      - CLICKHOUSE_URL=http://clickhouse:clickhouse@clickhouse:8123/analytics
    ports:
      - "9001:9000"
    networks:
      - cs2_network

volumes:
  postgres_data:
    driver: local
  postgres_logs:
    driver: local
  clickhouse_data:
    driver: local
  clickhouse_logs:
    driver: local
  rabbitmq_data:
    driver: local
  rabbitmq_logs:
    driver: local

networks:
  cs2_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 